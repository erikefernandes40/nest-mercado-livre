generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  email    String @unique
  password String

  name  String
  Order Order[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")


  @@map("users")
}

model Order {
  id              String            @id @default(uuid())
  user            User              @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  user_id         String
  product         Product           @relation(fields: [product_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  product_id      String
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  ProductsOnOrder ProductsOnOrder[]

  @@map("orders")
}

model Product {
  id String @id @default(uuid())

  title String

  price Float

  available_quantity Int

  category        Category          @relation(fields: [category_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  category_id     String
  ProductsOnOrder ProductsOnOrder[]
  Order           Order[]
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  @@map("product")
}

model ProductsOnOrder {
  order      Order   @relation(fields: [order_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  order_id   String
  product    Product @relation(fields: [product_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  product_id String


  @@id([order_id, product_id])
  @@map("productOnOrder")
}

model Category {
  id String @id @default(uuid())

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  name      String
  Product   Product[]
  @@map("category")
}
